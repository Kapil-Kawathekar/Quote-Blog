{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","components/pages/QuoteDetails.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","CommentItem","props","item","text","CommentsList","comments","map","comment","id","NewCommentForm","useHttp","addComment","sendRequest","status","error","onAddedComment","commentTextRef","useRef","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","getAllComments","loadedComments","data","useState","isAddingComment","setIsAddingComment","onAddedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetails","param","useParams","getSingleQuote","loadedQuote","Object","keys","path","exact"],"mappings":"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","file":"static/js/4.1934bc62.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport classes from \"./NoQuotesFound.module.css\";\r\n\r\nconst NoQuotesFound = () => {\r\n  return (\r\n    <div className={classes.noquotes}>\r\n      <p>No quotes found!</p>\r\n      <Link to=\"/new-quote\" className=\"btn\">\r\n        Add a Quote\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoQuotesFound;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2cyWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__27wF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3SIxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__14cLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__LHsFw\",\"loading\":\"NewCommentForm_loading__5rsgv\",\"control\":\"NewCommentForm_control__1UNTx\",\"actions\":\"NewCommentForm_actions__3ylhh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__4e_hW\"};","import classes from './CommentItem.module.css';\r\n\r\nconst CommentItem = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <p>{props.text}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import CommentItem from './CommentItem';\r\nimport classes from './CommentsList.module.css';\r\n\r\nconst CommentsList = (props) => {\r\n  return (\r\n    <ul className={classes.comments}>\r\n      {props.comments.map((comment) => (\r\n        <CommentItem key={comment.id} text={comment.text} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import { useEffect, useRef } from \"react\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addComment } from \"../lib/api\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nimport classes from \"./NewCommentForm.module.css\";\r\n\r\nconst NewCommentForm = (props) => {\r\n  const { sendRequest, status, error } = useHttp(addComment);\r\n\r\n  const { onAddedComment } = props;\r\n  // console.log(props.quoteId, \" from New Comment Form.js\");\r\n  const commentTextRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\" && !error) {\r\n      onAddedComment();\r\n    }\r\n  }, [status, error, onAddedComment]);\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredText = commentTextRef.current.value;\r\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\r\n    // optional: Could validate here\r\n\r\n    // send comment to server\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitFormHandler}>\r\n      {status === \"pending\" && (\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      <div className={classes.control} onSubmit={submitFormHandler}>\r\n        <label htmlFor=\"comment\">Your Comment</label>\r\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className=\"btn\">Add Comment</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewCommentForm;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllComments } from \"../lib/api\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport CommentsList from \"../comments/CommentsList\";\r\nimport classes from \"./Comments.module.css\";\r\nimport NewCommentForm from \"./NewCommentForm\";\r\n\r\nconst Comments = (props) => {\r\n  const quoteId = props.quoteId;\r\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\r\n  const [isAddingComment, setIsAddingComment] = useState(false);\r\n\r\n  const startAddCommentHandler = () => {\r\n    setIsAddingComment(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [quoteId, sendRequest]);\r\n\r\n  const onAddedCommentHandler = useCallback(() => {\r\n    setIsAddingComment(false);\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n  let comments;\r\n  if (status === \"pending\") {\r\n    comments = (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n  // console.log(\"quoteId from comments .js \", quoteId);\r\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\r\n    comments = <CommentsList comments={loadedComments}></CommentsList>;\r\n  }\r\n  if (\r\n    status === \"completed\" &&\r\n    (!loadedComments || loadedComments.length === 0)\r\n  ) {\r\n    comments = <div className=\"centered\">No Comments</div>;\r\n  }\r\n\r\n  return (\r\n    <section className={classes.comments}>\r\n      <h2>User Comments</h2>\r\n      {!isAddingComment && (\r\n        <button className=\"btn\" onClick={startAddCommentHandler}>\r\n          Add a Comment\r\n        </button>\r\n      )}\r\n      {isAddingComment && (\r\n        <NewCommentForm\r\n          quoteId={quoteId}\r\n          onAddedComment={onAddedCommentHandler}\r\n        />\r\n      )}\r\n      {comments}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import classes from './HighlightedQuote.module.css';\r\n\r\nconst HighlightedQuote = (props) => {\r\n  return (\r\n    <figure className={classes.quote}>\r\n      <p>{props.text}</p>\r\n      <figcaption>{props.author}</figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default HighlightedQuote;\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Comments from \"../comments/Comments\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\r\nimport NoQuotesFound from \"../quotes/NoQuotesFound\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\n// const DUMMY_DATA = [\r\n//   { id: \"q1\", author: \"Kapil\", text: \"Learning and improving Skills\" },\r\n//   { id: \"q2\", author: \"Vinay\", text: \"Having a Business\" },\r\n// ];\r\n\r\nexport default function QuoteDetails() {\r\n  const param = useParams();\r\n  //   console.log(\"Page Detail Loaded\"); //Link,Route,history.push() will reload the component\r\n  const { quoteId } = param;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (\r\n    status === \"completed\" &&\r\n    (!loadedQuote || Object.keys(loadedQuote).length === 0)\r\n  ) {\r\n    return <NoQuotesFound></NoQuotesFound>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote\r\n        text={loadedQuote.text}\r\n        author={loadedQuote.author}\r\n      ></HighlightedQuote>\r\n\r\n      <Route path={`/quotes/${param.quoteId}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${param.quoteId}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`/quotes/${param.quoteId}/comments`}>\r\n        <Comments quoteId={quoteId}></Comments>\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}